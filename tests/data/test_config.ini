# Store all configuration options used by the bot to determine runtime functionality
# and any conditionally available options can be modified here to reflect your version
# of Tap Titans 2 and current progress or status (VIP, Ad skips, etc)...
# Note that the position of the Emulator should be in the top-left region of your screen.

[RUNTIME]
# Choose a key shortcut that can be used to perform soft exit on quit (hard quit is default).
# Meaning that no clean up is performed before bot is shutdown.
SOFT_SHUTDOWN_KEY = space
# How long will the bot wait for a soft shutdown request before shutting down.
SHUTDOWN_SECONDS = 5
# Should a soft shutdown be performed if the bot runs into a critical error during runtime.
SOFT_SHUTDOWN_ON_CRITICAL_ERROR = on
# Enable stats soft shutdown updates.
UPDATE_STATS_ON_SOFT_SHUTDOWN = on

[DEVICE]
# Ensure the height and width matches your emulator settings.
# DEFAULT: 480x800.
WIDTH = 480
HEIGHT = 800
# What emulator service is being used.
EMULATOR = nox

[GENERIC]
# Enable the premium ad collection, ability to skip ads.
ENABLE_PREMIUM_AD_COLLECT = on
# Collect eggs if they are available and hatch them.
ENABLE_EGG_COLLECT = on
# Enable tapping on titan (also enables clicking of fairies on screen).
ENABLE_TAPPING = on
# Enable entering of tournaments.
ENABLE_TOURNAMENTS = on

[ACTIONS_GENERAL]
# Action of running all three should happen every x seconds (sword master, heroes, skills).
RUN_ACTIONS_EVERY_X_SECONDS = 40
# Run all actions initially when the script is started.
RUN_ACTIONS_ON_START = on
# Determine the order of actions, depending on your build, the order of these will determine
# what is pushed for during action runtime.
# 1,2,3 = push heroes, 2,3,1 = push sword master.
ORDER_LEVEL_HEROES = 1
ORDER_LEVEL_MASTER = 2
ORDER_LEVEL_SKILLS = 3

[ACTIONS_CLAN_QUEST]
# Enable the clicking of the clan quest icon if a battle is in progress.
ENABLE_CLAN_QUEST = off
# Should an additional clan fight take place after the first one is finished? This will cost five diamonds.
ENABLE_EXTRA_FIGHT = on

[ACTIONS_MASTER]
# Enable the levelling of the sword master
ENABLE_MASTER = on
# Determine the amount of clicks performed on the sword master.
MASTER_LEVEL_INTENSITY = 3

[ACTIONS_HEROES]
# Enable the levelling up of heroes.
ENABLE_HEROES = on
# Determine the amount of clicks performed on each hero during the level up process.
HERO_LEVEL_INTENSITY = 3

[ACTIONS_SKILLS]
# Enable interactions with the sword masters skills.
ENABLE_SKILLS = on
# Determine if the skills will be activated on startup.
ACTIVATE_SKILLS_ON_START = on
# Press each skill specified below every x seconds. (0 = not clicked).
# Check skill information on main game panel and add DURATION + COOLDOWN for a valid value.
# Some padding may be added to ensure a skill isn't missed at any point.
INTERVAL_HEAVENLY_STRIKE = 0
INTERVAL_DEADLY_STRIKE = 0
INTERVAL_HAND_OF_MIDAS = 0
INTERVAL_FIRE_SWORD = 130
INTERVAL_WAR_CRY = 0
INTERVAL_SHADOW_CLONE = 200
# Given the intervals above, determine if enabled skills should only be activated
# once all of them are off of their cooldown.
FORCE_ENABLED_SKILLS_WAIT = on
# Determine the amount of clicks performed on each skill during the level up process.
SKILL_LEVEL_INTENSITY = 10

[ACTIONS_PRESTIGE]
# Enable auto prestige.
ENABLE_AUTO_PRESTIGE = on
# Determine the amount of minutes between each auto prestige.
PRESTIGE_AFTER_X_MINUTES = 100

[ACTIONS_ARTIFACTS]
# Enable artifact purchases.
ENABLE_ARTIFACT_PURCHASE = on
# Determine the name of the artifact that will be upgraded
UPGRADE_ARTIFACT = book_of_shadows

[STATS]
# Enable stat updates.
ENABLE_STATS = on
# How many minutes between each stat update. A stat update will perform
# an OCR check on the stats page and write this information to the stats file.
STATS_UPDATE_INTERVAL_MINUTES = 30

[LOGGING]
# Enable logging information during bot runtime.
ENABLE_LOGGING = off
# Logging level used during runtime.
LOGGING_LEVEL = DEBUG
